{"ast":null,"code":"var _jsxFileName = \"/Users/taylorepskamp/Desktop/halfcaff/src/component/Chart/chart.js\";\nimport React from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Chart extends React.Component {\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.data = []; // create hours for x axis\n\n    for (let i = 0; i < 36; i++) {\n      if (i == 0) {\n        chart.data.push({\n          \"hour\": `12 am`\n        });\n      }\n\n      if (i == 12) {\n        chart.data.push({\n          \"hour\": `12 pm`\n        });\n      }\n\n      if (i > 0 && i < 12) {\n        chart.data.push({\n          \"hour\": `${i} am`\n        });\n      }\n\n      if (i > 12 && i < 24) {\n        chart.data.push({\n          \"hour\": `${i % 12} pm`\n        });\n      }\n\n      if (i == 24) {\n        chart.data.push({\n          \"hour\": `12 am +1`\n        });\n      }\n\n      if (i > 24) {\n        chart.data.push({\n          \"hour\": `${i % 24} am +1`\n        });\n      }\n    } //create values for line series 1\n\n\n    if (this.props.drinkList.length > 0) {\n      let drink1 = this.props.drinkList[0];\n      let t = 0;\n\n      for (let i = drink1.timeValue; i < 36; i++) {\n        let obj = chart.data[i];\n        let mgs = drink1.mgValue * drink1.quantValue;\n        obj[drink1.name] = (mgs * 0.5 ** (t / 6)).toFixed(2);\n        t++;\n      }\n    }\n\n    if (this.props.drinkList.length > 1) {\n      console.log(\"hello\");\n      let drink2 = this.props.drinkList[1];\n      console.log(drink2);\n      let t = 0;\n\n      for (let i = drink2.timeValue; i < 36; i++) {\n        let name = \"hello\";\n        let obj = chart.data[i];\n        let mgs = drink2.mgValue * drink2.quantValue;\n        obj[name] = (mgs * 0.5 ** (t / 6)).toFixed(2);\n        console.log(chart.data[i]);\n        t++;\n      }\n    }\n\n    if (this.props.drinkList.length > 2) {\n      let drink3 = this.props.drinkList[2];\n      let t = 0;\n\n      for (let i = drink3.timeValue; i < 36; i++) {\n        let obj = chart.data[i];\n        let mgs = drink3.mgValue * drink3.quantValue;\n        obj[drink3.name] = (mgs * 0.5 ** (t / 6)).toFixed(2);\n        t++;\n      }\n    }\n\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"hour\";\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n\n    if (this.props.drinkList.length > 0) {\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.categoryX = \"hour\";\n      series.name = this.props.drinkList[0].name;\n      series.dataFields.valueY = this.props.drinkList[0].name;\n      series.tooltipHTML = \"<span style='font-size:14px; color:#000000;'><b>{valueY.value} mg</b></span>\";\n      series.tooltipText = \"[#000]{valueY.value}[/]\";\n      series.tooltip.background.fill = am4core.color(\"#FFF\");\n      series.tooltip.getStrokeFromObject = true;\n      series.tooltip.background.strokeWidth = 3;\n      series.tooltip.getFillFromObject = false;\n      series.fillOpacity = 0.6;\n      series.strokeWidth = 2;\n      series.stacked = true;\n    }\n\n    if (this.props.drinkList.length > 1) {\n      let series2 = chart.series.push(new am4charts.LineSeries());\n      series2.name = this.props.drinkList[1].name;\n      series2.dataFields.categoryX = \"hour\";\n      series2.dataFields.valueY = chart.data.hello;\n      series2.tooltipHTML = \"<span style='font-size:14px; color:#000000;'><b>{valueY.value} mg</b></span>\";\n      series2.tooltipText = \"[#000]{valueY.value}[/]\";\n      series2.tooltip.background.fill = am4core.color(\"#FFF\");\n      series2.tooltip.getFillFromObject = false;\n      series2.tooltip.getStrokeFromObject = true;\n      series2.tooltip.background.strokeWidth = 3;\n      series2.sequencedInterpolation = true;\n      series2.fillOpacity = 0.6;\n      series2.stacked = true;\n      series2.strokeWidth = 2;\n    }\n\n    if (this.props.drinkList.length > 2) {\n      let series3 = chart.series.push(new am4charts.LineSeries());\n      series3.name = this.props.drinkList[2].name;\n      series3.dataFields.categoryX = \"hour\";\n      series3.dataFields.valueY = this.props.drinkList[2].name;\n      series3.tooltipHTML = \"<span style='font-size:14px; color:#000000;'><b>{valueY.value} mg</b></span>\";\n      series3.tooltipText = \"[#000]{valueY.value}[/]\";\n      series3.tooltip.background.fill = am4core.color(\"#FFF\");\n      series3.tooltip.getFillFromObject = false;\n      series3.tooltip.getStrokeFromObject = true;\n      series3.tooltip.background.strokeWidth = 3;\n      series3.sequencedInterpolation = true;\n      series3.fillOpacity = 0.6;\n      series3.defaultState.transitionDuration = 1000;\n      series3.stacked = true;\n      series3.strokeWidth = 2;\n    }\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.xAxis = categoryAxis;\n    chart.scrollbarX = new am4core.Scrollbar(); // Add a legend\n\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"top\"; // axis ranges\n\n    let range = categoryAxis.axisRanges.create();\n    range.category = chart.data[22].hour;\n    range.endCategory = chart.data[30].hour;\n    range.axisFill.fill = chart.colors.getIndex(7);\n    range.axisFill.fillOpacity = 0.2;\n    range.label.text = \"Sleep Time\";\n    range.label.inside = true;\n    range.label.rotation = 90;\n    range.label.horizontalCenter = \"right\";\n    range.label.verticalCenter = \"bottom\";\n    /*let range2 = categoryAxis.axisRanges.create();\n    range2.category = chart.data[22].hour;\n    range2.grid.stroke = chart.colors.getIndex(7);\n    range2.grid.strokeOpacity = 0.6;\n    range2.grid.strokeDasharray = \"5,2\";\n      range2.label.text = \"Motorcycle fee introduced\";\n    range2.label.inside = true;\n    range2.label.rotation = 90;\n    range2.label.horizontalCenter = \"right\";\n    range2.label.verticalCenter = \"bottom\";*/\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rn-progress-area pb--120 bg_color--1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"600px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/taylorepskamp/Desktop/halfcaff/src/component/Chart/chart.js"],"names":["React","am4core","am4charts","am4themes_animated","useTheme","Chart","Component","componentDidMount","chart","create","XYChart","data","i","push","props","drinkList","length","drink1","t","timeValue","obj","mgs","mgValue","quantValue","name","toFixed","console","log","drink2","drink3","categoryAxis","xAxes","CategoryAxis","dataFields","category","valueAxis","yAxes","ValueAxis","tooltip","disabled","series","LineSeries","categoryX","valueY","tooltipHTML","tooltipText","background","fill","color","getStrokeFromObject","strokeWidth","getFillFromObject","fillOpacity","stacked","series2","hello","sequencedInterpolation","series3","defaultState","transitionDuration","cursor","XYCursor","xAxis","scrollbarX","Scrollbar","legend","Legend","position","range","axisRanges","hour","endCategory","axisFill","colors","getIndex","label","text","inside","rotation","horizontalCenter","verticalCenter","componentWillUnmount","dispose","render","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Chart extends React.Component{\n    \n    componentDidMount(){\n        let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n        chart.data = [];\n        \n        \n        // create hours for x axis\n        for (let i = 0; i<36 ; i++){\n            if(i==0){\n                chart.data.push({\n                     \"hour\":`12 am`,\n                    })\n            }\n            if(i==12){\n                chart.data.push({\n                         \"hour\":`12 pm`,\n                        })\n            }\n            if(i>0 &&i<12){\n            chart.data.push({\n                 \"hour\":`${i} am`,\n                })\n            }\n            if(i>12 && i<24){\n                chart.data.push({\n                    \"hour\":`${i%12} pm`,\n                   })\n            }\n            if(i==24){\n                chart.data.push({\n                    \"hour\":`12 am +1`,\n                   })\n            }\n            if(i>24){\n                chart.data.push({\n                    \"hour\":`${i%24} am +1`,\n                   })\n            }\n        }\n\n        //create values for line series 1\n        if(this.props.drinkList.length > 0){\n            let drink1 = this.props.drinkList[0]\n            let  t = 0\n                for (let i=drink1.timeValue; i<36;i++){\n                    let obj = chart.data[i]\n                    let mgs = drink1.mgValue * drink1.quantValue\n                    obj[drink1.name] =  (mgs * (0.5 ** (t/6))).toFixed(2)\n                    t++ }\n        }\n\n        if(this.props.drinkList.length > 1){\n            console.log(\"hello\")\n            let drink2 = this.props.drinkList[1]\n            console.log(drink2)\n                let  t = 0\n                for (let i=drink2.timeValue; i<36;i++){\n                    let name = \"hello\"\n                    let obj = chart.data[i]\n                    let mgs = drink2.mgValue * drink2.quantValue\n                    obj[name] =  (mgs * (0.5 ** (t/6))).toFixed(2)\n                    console.log(chart.data[i])\n                    t++ }\n                \n        }\n\n        if(this.props.drinkList.length > 2){\n            let drink3 = this.props.drinkList[2]\n            let  t = 0\n                for (let i=drink3.timeValue; i<36;i++){\n                    let obj = chart.data[i]\n                    let mgs = drink3.mgValue * drink3.quantValue\n                    obj[drink3.name] =  (mgs * (0.5 ** (t/6))).toFixed(2)\n                    t++ }\n        }\n\n\n        let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"hour\"\n           \n\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.tooltip.disabled = true;\n\n        if(this.props.drinkList.length > 0){\n        let series = chart.series.push(new am4charts.LineSeries());\n        series.dataFields.categoryX = \"hour\";\n        series.name = this.props.drinkList[0].name;\n        series.dataFields.valueY = this.props.drinkList[0].name;\n        series.tooltipHTML = \"<span style='font-size:14px; color:#000000;'><b>{valueY.value} mg</b></span>\";\n        series.tooltipText = \"[#000]{valueY.value}[/]\";\n        series.tooltip.background.fill = am4core.color(\"#FFF\");\n        series.tooltip.getStrokeFromObject = true;\n        series.tooltip.background.strokeWidth = 3;\n        series.tooltip.getFillFromObject = false;\n        series.fillOpacity = 0.6;\n        series.strokeWidth = 2;\n        series.stacked = true;\n        }\n\n        if(this.props.drinkList.length > 1){\n        let series2 = chart.series.push(new am4charts.LineSeries());\n        series2.name = this.props.drinkList[1].name;\n        series2.dataFields.categoryX = \"hour\";\n        series2.dataFields.valueY = chart.data.hello;\n        series2.tooltipHTML = \"<span style='font-size:14px; color:#000000;'><b>{valueY.value} mg</b></span>\";\n        series2.tooltipText = \"[#000]{valueY.value}[/]\";\n        series2.tooltip.background.fill = am4core.color(\"#FFF\");\n        series2.tooltip.getFillFromObject = false;\n        series2.tooltip.getStrokeFromObject = true;\n        series2.tooltip.background.strokeWidth = 3;\n        series2.sequencedInterpolation = true;\n        series2.fillOpacity = 0.6;\n        series2.stacked = true;\n        series2.strokeWidth = 2;}\n\n        if(this.props.drinkList.length > 2){\n        let series3 = chart.series.push(new am4charts.LineSeries());\n        series3.name = this.props.drinkList[2].name;\n        series3.dataFields.categoryX = \"hour\";\n        series3.dataFields.valueY = this.props.drinkList[2].name;\n        series3.tooltipHTML = \"<span style='font-size:14px; color:#000000;'><b>{valueY.value} mg</b></span>\";\n        series3.tooltipText = \"[#000]{valueY.value}[/]\";\n        series3.tooltip.background.fill = am4core.color(\"#FFF\");\n        series3.tooltip.getFillFromObject = false;\n        series3.tooltip.getStrokeFromObject = true;\n        series3.tooltip.background.strokeWidth = 3;\n        series3.sequencedInterpolation = true;\n        series3.fillOpacity = 0.6;\n        series3.defaultState.transitionDuration = 1000;\n        series3.stacked = true;\n        series3.strokeWidth = 2;}\n\n\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.xAxis = categoryAxis;\n        chart.scrollbarX = new am4core.Scrollbar();\n\n        // Add a legend\n        chart.legend = new am4charts.Legend();\n        chart.legend.position = \"top\";\n\n        // axis ranges\n        let range = categoryAxis.axisRanges.create();\n        range.category = chart.data[22].hour;\n        range.endCategory = chart.data[30].hour;\n        range.axisFill.fill = chart.colors.getIndex(7);\n        range.axisFill.fillOpacity = 0.2;\n\n        range.label.text = \"Sleep Time\";\n        range.label.inside = true;\n        range.label.rotation = 90;\n        range.label.horizontalCenter = \"right\";\n        range.label.verticalCenter = \"bottom\";\n\n        /*let range2 = categoryAxis.axisRanges.create();\n        range2.category = chart.data[22].hour;\n        range2.grid.stroke = chart.colors.getIndex(7);\n        range2.grid.strokeOpacity = 0.6;\n        range2.grid.strokeDasharray = \"5,2\";\n\n\n        range2.label.text = \"Motorcycle fee introduced\";\n        range2.label.inside = true;\n        range2.label.rotation = 90;\n        range2.label.horizontalCenter = \"right\";\n        range2.label.verticalCenter = \"bottom\";*/\n        \n    }\n\n    componentWillUnmount() {\n        if (this.chart) {\n          this.chart.dispose();\n        }\n      }\n\n\n\n\n    render(){\n      return(\n        <div className=\"rn-progress-area pb--120 bg_color--1\">\n            <div className=\"container\">\n                <div id=\"chartdiv\" style={{ width: \"100%\", height: \"600px\" }}></div>\n            </div>\n        </div>\n      )}\n}\n      export default Chart"]},"metadata":{},"sourceType":"module"}