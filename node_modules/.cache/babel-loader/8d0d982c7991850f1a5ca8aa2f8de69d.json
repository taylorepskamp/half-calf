{"ast":null,"code":"var _jsxFileName = \"/Users/taylorepskamp/Desktop/halfcaff/src/component/Chart/chart.js\";\nimport React from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Chart extends React.Component {\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.data = []; // create hours for x axis\n\n    for (let i = 0; i < 25; i++) {\n      chart.data.push({\n        \"hour\": `0${i}:00`\n      });\n    } //create values for line series 1\n\n\n    if (this.props.drinkList.length > 0) {\n      let drink1 = this.props.drinkList[0];\n      let t = 0;\n\n      for (let i = drink1.timeValue; i < 24; i++) {\n        let obj = chart.data[i];\n        let mgs = drink1.mgValue * drink1.quantValue;\n        obj[drink1.name] = mgs * 0.5 ** (t / 6);\n        t++;\n      }\n    }\n\n    if (this.props.drinkList.length > 1) {\n      let drink2 = this.props.drinkList[1];\n      let t = 0;\n\n      for (let i = drink2.timeValue; i < 32; i++) {\n        let obj = chart.data[i];\n        let mgs = drink2.mgValue * drink2.quantValue;\n        obj[drink2.name] = mgs * 0.5 ** (t / 6);\n        t++;\n      }\n    }\n\n    if (this.props.drinkList.length > 2) {\n      let drink3 = this.props.drinkList[2];\n      let t = 0;\n\n      for (let i = drink3.timeValue; i < 32; i++) {\n        let obj = chart.data[i];\n        let mgs = drink3.mgValue * drink3.quantValue;\n        obj[drink3.name] = mgs * 0.5 ** (t / 6);\n        t++;\n      }\n    }\n\n    chart.dateFormatter.inputDateFormat = \"hh:mm\";\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.minGridDistance = 6;\n    dateAxis.startLocation = 0.5;\n    dateAxis.endLocation = 0.5;\n    dateAxis.baseInterval = {\n      timeUnit: \"hour\",\n      count: 1\n    };\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n\n    if (this.props.drinkList.length > 0) {\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.valueX = \"hour\";\n      series.name = this.props.drinkList[0].name;\n      series.dataFields.valueY = this.props.drinkList[0].name;\n      series.tooltipHTML = \"<img src='https://www.amcharts.com/lib/3/images/car.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'><span style='font-size:14px; color:#000000;'><b>{valueY.value}</b></span>\";\n      series.tooltipText = \"[#000]{valueY.value}[/]\";\n      series.tooltip.background.fill = am4core.color(\"#FFF\");\n      series.tooltip.getStrokeFromObject = true;\n      series.tooltip.background.strokeWidth = 3;\n      series.tooltip.getFillFromObject = false;\n      series.fillOpacity = 0.6;\n      series.strokeWidth = 2;\n      series.stacked = true;\n    }\n\n    if (this.props.drinkList.length > 1) {\n      let series2 = chart.series.push(new am4charts.LineSeries());\n      series2.name = this.props.drinkList[1].name;\n      series2.dataFields.valueX = \"hour\";\n      series2.dataFields.valueY = this.props.drinkList[1].name;\n      series2.tooltipHTML = \"<img src='https://www.amcharts.com/lib/3/images/motorcycle.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'><span style='font-size:14px; color:#000000;'><b>{valueY.value}</b></span>\";\n      series2.tooltipText = \"[#000]{valueY.value}[/]\";\n      series2.tooltip.background.fill = am4core.color(\"#FFF\");\n      series2.tooltip.getFillFromObject = false;\n      series2.tooltip.getStrokeFromObject = true;\n      series2.tooltip.background.strokeWidth = 3;\n      series2.sequencedInterpolation = true;\n      series2.fillOpacity = 0.6;\n      series2.stacked = true;\n      series2.strokeWidth = 2;\n    }\n\n    if (this.props.drinkList.length > 2) {\n      let series3 = chart.series.push(new am4charts.LineSeries());\n      series3.name = this.props.drinkList[2].name;\n      series3.dataFields.valueX = \"hour\";\n      series3.dataFields.valueY = this.props.drinkList[2].name;\n      series3.tooltipHTML = \"<img src='https://www.amcharts.com/lib/3/images/bicycle.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'><span style='font-size:14px; color:#000000;'><b>{valueY.value}</b></span>\";\n      series3.tooltipText = \"[#000]{valueY.value}[/]\";\n      series3.tooltip.background.fill = am4core.color(\"#FFF\");\n      series3.tooltip.getFillFromObject = false;\n      series3.tooltip.getStrokeFromObject = true;\n      series3.tooltip.background.strokeWidth = 3;\n      series3.sequencedInterpolation = true;\n      series3.fillOpacity = 0.6;\n      series3.defaultState.transitionDuration = 1000;\n      series3.stacked = true;\n      series3.strokeWidth = 2;\n    }\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.xAxis = dateAxis;\n    chart.scrollbarX = new am4core.Scrollbar(); // Add a legend\n\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"top\"; // axis ranges\n\n    let range = dateAxis.axisRanges.create();\n    range.date = new Date(2001, 1, 1);\n    range.endDate = new Date(2001, 1, 2);\n    range.axisFill.fill = chart.colors.getIndex(7);\n    range.axisFill.fillOpacity = 0.2;\n    /*     range.label.text = \"Fines for speeding increased\";\n         range.label.inside = true;\n         range.label.rotation = 90;\n         range.label.horizontalCenter = \"right\";\n         range.label.verticalCenter = \"bottom\";\n          let range2 = dateAxis.axisRanges.create();\n         range2.date = chart.data[4].hour;\n         range2.grid.stroke = chart.colors.getIndex(7);\n         range2.grid.strokeOpacity = 0.6;\n         range2.grid.strokeDasharray = \"5,2\";*/\n\n    /*\n            range2.label.text = \"Motorcycle fee introduced\";\n            range2.label.inside = true;\n            range2.label.rotation = 90;\n            range2.label.horizontalCenter = \"right\";\n            range2.label.verticalCenter = \"bottom\";\n            */\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rn-progress-area pb--120 bg_color--1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"600px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/taylorepskamp/Desktop/halfcaff/src/component/Chart/chart.js"],"names":["React","am4core","am4charts","am4themes_animated","useTheme","Chart","Component","componentDidMount","chart","create","XYChart","data","i","push","props","drinkList","length","drink1","t","timeValue","obj","mgs","mgValue","quantValue","name","drink2","drink3","dateFormatter","inputDateFormat","dateAxis","xAxes","DateAxis","renderer","minGridDistance","startLocation","endLocation","baseInterval","timeUnit","count","valueAxis","yAxes","ValueAxis","tooltip","disabled","series","LineSeries","dataFields","valueX","valueY","tooltipHTML","tooltipText","background","fill","color","getStrokeFromObject","strokeWidth","getFillFromObject","fillOpacity","stacked","series2","sequencedInterpolation","series3","defaultState","transitionDuration","cursor","XYCursor","xAxis","scrollbarX","Scrollbar","legend","Legend","position","range","axisRanges","date","Date","endDate","axisFill","colors","getIndex","componentWillUnmount","dispose","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACAF,OAAO,CAACG,QAAR,CAAiBD,kBAAjB;;AAEA,MAAME,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAmC;AAE/BC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,KAAK,GAAGP,OAAO,CAACQ,MAAR,CAAe,UAAf,EAA2BP,SAAS,CAACQ,OAArC,CAAZ;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,EAAb,CAFe,CAIf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,EAAlB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBJ,MAAAA,KAAK,CAACG,IAAN,CAAWE,IAAX,CAAgB;AACX,gBAAQ,IAAGD,CAAE;AADF,OAAhB;AAGC,KATU,CAWf;;;AACA,QAAG,KAAKE,KAAL,CAAWC,SAAX,CAAqBC,MAArB,GAA8B,CAAjC,EAAmC;AAC/B,UAAIC,MAAM,GAAG,KAAKH,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAb;AACA,UAAKG,CAAC,GAAG,CAAT;;AACI,WAAK,IAAIN,CAAC,GAACK,MAAM,CAACE,SAAlB,EAA6BP,CAAC,GAAC,EAA/B,EAAkCA,CAAC,EAAnC,EAAsC;AAClC,YAAIQ,GAAG,GAAGZ,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAV;AACA,YAAIS,GAAG,GAAGJ,MAAM,CAACK,OAAP,GAAiBL,MAAM,CAACM,UAAlC;AACAH,QAAAA,GAAG,CAACH,MAAM,CAACO,IAAR,CAAH,GAAoBH,GAAG,GAAI,QAAQH,CAAC,GAAC,CAAV,CAA3B;AACAA,QAAAA,CAAC;AAAI;AAChB;;AAED,QAAG,KAAKJ,KAAL,CAAWC,SAAX,CAAqBC,MAArB,GAA8B,CAAjC,EAAmC;AAC/B,UAAIS,MAAM,GAAG,KAAKX,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAb;AACA,UAAKG,CAAC,GAAG,CAAT;;AACI,WAAK,IAAIN,CAAC,GAACa,MAAM,CAACN,SAAlB,EAA6BP,CAAC,GAAC,EAA/B,EAAkCA,CAAC,EAAnC,EAAsC;AAClC,YAAIQ,GAAG,GAAGZ,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAV;AACA,YAAIS,GAAG,GAAGI,MAAM,CAACH,OAAP,GAAiBG,MAAM,CAACF,UAAlC;AACAH,QAAAA,GAAG,CAACK,MAAM,CAACD,IAAR,CAAH,GAAoBH,GAAG,GAAI,QAAQH,CAAC,GAAC,CAAV,CAA3B;AACAA,QAAAA,CAAC;AAAI;AAChB;;AAED,QAAG,KAAKJ,KAAL,CAAWC,SAAX,CAAqBC,MAArB,GAA8B,CAAjC,EAAmC;AAC/B,UAAIU,MAAM,GAAG,KAAKZ,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAb;AACA,UAAKG,CAAC,GAAG,CAAT;;AACI,WAAK,IAAIN,CAAC,GAACc,MAAM,CAACP,SAAlB,EAA6BP,CAAC,GAAC,EAA/B,EAAkCA,CAAC,EAAnC,EAAsC;AAClC,YAAIQ,GAAG,GAAGZ,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAV;AACA,YAAIS,GAAG,GAAGK,MAAM,CAACJ,OAAP,GAAiBI,MAAM,CAACH,UAAlC;AACAH,QAAAA,GAAG,CAACM,MAAM,CAACF,IAAR,CAAH,GAAoBH,GAAG,GAAI,QAAQH,CAAC,GAAC,CAAV,CAA3B;AACAA,QAAAA,CAAC;AAAI;AAChB;;AAEDV,IAAAA,KAAK,CAACmB,aAAN,CAAoBC,eAApB,GAAsC,OAAtC;AACA,QAAIC,QAAQ,GAAGrB,KAAK,CAACsB,KAAN,CAAYjB,IAAZ,CAAiB,IAAIX,SAAS,CAAC6B,QAAd,EAAjB,CAAf;AACAF,IAAAA,QAAQ,CAACG,QAAT,CAAkBC,eAAlB,GAAoC,CAApC;AACAJ,IAAAA,QAAQ,CAACK,aAAT,GAAyB,GAAzB;AACAL,IAAAA,QAAQ,CAACM,WAAT,GAAuB,GAAvB;AACAN,IAAAA,QAAQ,CAACO,YAAT,GAAwB;AACxBC,MAAAA,QAAQ,EAAE,MADc;AAExBC,MAAAA,KAAK,EAAE;AAFiB,KAAxB;AAKA,QAAIC,SAAS,GAAG/B,KAAK,CAACgC,KAAN,CAAY3B,IAAZ,CAAiB,IAAIX,SAAS,CAACuC,SAAd,EAAjB,CAAhB;AACAF,IAAAA,SAAS,CAACG,OAAV,CAAkBC,QAAlB,GAA6B,IAA7B;;AAEA,QAAG,KAAK7B,KAAL,CAAWC,SAAX,CAAqBC,MAArB,GAA8B,CAAjC,EAAmC;AACnC,UAAI4B,MAAM,GAAGpC,KAAK,CAACoC,MAAN,CAAa/B,IAAb,CAAkB,IAAIX,SAAS,CAAC2C,UAAd,EAAlB,CAAb;AACAD,MAAAA,MAAM,CAACE,UAAP,CAAkBC,MAAlB,GAA2B,MAA3B;AACAH,MAAAA,MAAM,CAACpB,IAAP,GAAc,KAAKV,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwBS,IAAtC;AACAoB,MAAAA,MAAM,CAACE,UAAP,CAAkBE,MAAlB,GAA2B,KAAKlC,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwBS,IAAnD;AACAoB,MAAAA,MAAM,CAACK,WAAP,GAAqB,gNAArB;AACAL,MAAAA,MAAM,CAACM,WAAP,GAAqB,yBAArB;AACAN,MAAAA,MAAM,CAACF,OAAP,CAAeS,UAAf,CAA0BC,IAA1B,GAAiCnD,OAAO,CAACoD,KAAR,CAAc,MAAd,CAAjC;AACAT,MAAAA,MAAM,CAACF,OAAP,CAAeY,mBAAf,GAAqC,IAArC;AACAV,MAAAA,MAAM,CAACF,OAAP,CAAeS,UAAf,CAA0BI,WAA1B,GAAwC,CAAxC;AACAX,MAAAA,MAAM,CAACF,OAAP,CAAec,iBAAf,GAAmC,KAAnC;AACAZ,MAAAA,MAAM,CAACa,WAAP,GAAqB,GAArB;AACAb,MAAAA,MAAM,CAACW,WAAP,GAAqB,CAArB;AACAX,MAAAA,MAAM,CAACc,OAAP,GAAiB,IAAjB;AACC;;AAED,QAAG,KAAK5C,KAAL,CAAWC,SAAX,CAAqBC,MAArB,GAA8B,CAAjC,EAAmC;AACnC,UAAI2C,OAAO,GAAGnD,KAAK,CAACoC,MAAN,CAAa/B,IAAb,CAAkB,IAAIX,SAAS,CAAC2C,UAAd,EAAlB,CAAd;AACAc,MAAAA,OAAO,CAACnC,IAAR,GAAe,KAAKV,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwBS,IAAvC;AACAmC,MAAAA,OAAO,CAACb,UAAR,CAAmBC,MAAnB,GAA4B,MAA5B;AACAY,MAAAA,OAAO,CAACb,UAAR,CAAmBE,MAAnB,GAA4B,KAAKlC,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwBS,IAApD;AACAmC,MAAAA,OAAO,CAACV,WAAR,GAAsB,uNAAtB;AACAU,MAAAA,OAAO,CAACT,WAAR,GAAsB,yBAAtB;AACAS,MAAAA,OAAO,CAACjB,OAAR,CAAgBS,UAAhB,CAA2BC,IAA3B,GAAkCnD,OAAO,CAACoD,KAAR,CAAc,MAAd,CAAlC;AACAM,MAAAA,OAAO,CAACjB,OAAR,CAAgBc,iBAAhB,GAAoC,KAApC;AACAG,MAAAA,OAAO,CAACjB,OAAR,CAAgBY,mBAAhB,GAAsC,IAAtC;AACAK,MAAAA,OAAO,CAACjB,OAAR,CAAgBS,UAAhB,CAA2BI,WAA3B,GAAyC,CAAzC;AACAI,MAAAA,OAAO,CAACC,sBAAR,GAAiC,IAAjC;AACAD,MAAAA,OAAO,CAACF,WAAR,GAAsB,GAAtB;AACAE,MAAAA,OAAO,CAACD,OAAR,GAAkB,IAAlB;AACAC,MAAAA,OAAO,CAACJ,WAAR,GAAsB,CAAtB;AAAyB;;AAEzB,QAAG,KAAKzC,KAAL,CAAWC,SAAX,CAAqBC,MAArB,GAA8B,CAAjC,EAAmC;AACnC,UAAI6C,OAAO,GAAGrD,KAAK,CAACoC,MAAN,CAAa/B,IAAb,CAAkB,IAAIX,SAAS,CAAC2C,UAAd,EAAlB,CAAd;AACAgB,MAAAA,OAAO,CAACrC,IAAR,GAAe,KAAKV,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwBS,IAAvC;AACAqC,MAAAA,OAAO,CAACf,UAAR,CAAmBC,MAAnB,GAA4B,MAA5B;AACAc,MAAAA,OAAO,CAACf,UAAR,CAAmBE,MAAnB,GAA4B,KAAKlC,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwBS,IAApD;AACAqC,MAAAA,OAAO,CAACZ,WAAR,GAAsB,oNAAtB;AACAY,MAAAA,OAAO,CAACX,WAAR,GAAsB,yBAAtB;AACAW,MAAAA,OAAO,CAACnB,OAAR,CAAgBS,UAAhB,CAA2BC,IAA3B,GAAkCnD,OAAO,CAACoD,KAAR,CAAc,MAAd,CAAlC;AACAQ,MAAAA,OAAO,CAACnB,OAAR,CAAgBc,iBAAhB,GAAoC,KAApC;AACAK,MAAAA,OAAO,CAACnB,OAAR,CAAgBY,mBAAhB,GAAsC,IAAtC;AACAO,MAAAA,OAAO,CAACnB,OAAR,CAAgBS,UAAhB,CAA2BI,WAA3B,GAAyC,CAAzC;AACAM,MAAAA,OAAO,CAACD,sBAAR,GAAiC,IAAjC;AACAC,MAAAA,OAAO,CAACJ,WAAR,GAAsB,GAAtB;AACAI,MAAAA,OAAO,CAACC,YAAR,CAAqBC,kBAArB,GAA0C,IAA1C;AACAF,MAAAA,OAAO,CAACH,OAAR,GAAkB,IAAlB;AACAG,MAAAA,OAAO,CAACN,WAAR,GAAsB,CAAtB;AAAyB;;AAGzB/C,IAAAA,KAAK,CAACwD,MAAN,GAAe,IAAI9D,SAAS,CAAC+D,QAAd,EAAf;AACAzD,IAAAA,KAAK,CAACwD,MAAN,CAAaE,KAAb,GAAqBrC,QAArB;AACArB,IAAAA,KAAK,CAAC2D,UAAN,GAAmB,IAAIlE,OAAO,CAACmE,SAAZ,EAAnB,CA3Ge,CA6Gf;;AACA5D,IAAAA,KAAK,CAAC6D,MAAN,GAAe,IAAInE,SAAS,CAACoE,MAAd,EAAf;AACA9D,IAAAA,KAAK,CAAC6D,MAAN,CAAaE,QAAb,GAAwB,KAAxB,CA/Ge,CAiHf;;AACA,QAAIC,KAAK,GAAG3C,QAAQ,CAAC4C,UAAT,CAAoBhE,MAApB,EAAZ;AACA+D,IAAAA,KAAK,CAACE,IAAN,GAAa,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAb;AACAH,IAAAA,KAAK,CAACI,OAAN,GAAgB,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAhB;AACAH,IAAAA,KAAK,CAACK,QAAN,CAAezB,IAAf,GAAsB5C,KAAK,CAACsE,MAAN,CAAaC,QAAb,CAAsB,CAAtB,CAAtB;AACAP,IAAAA,KAAK,CAACK,QAAN,CAAepB,WAAf,GAA6B,GAA7B;AAEL;;;;;;;;;;;AAYH;;;;;;;AAOK;;AAEDuB,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAKxE,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAWyE,OAAX;AACD;AACF;;AAKHC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADF;AAME;;AA/J2B;;AAiK7B,eAAe/E,KAAf","sourcesContent":["import React from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Chart extends React.Component{\n    \n    componentDidMount(){\n        let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n        chart.data = [];\n        \n        // create hours for x axis\n        for (let i = 0; i<25 ; i++){\n            chart.data.push({\n                 \"hour\":`0${i}:00`,\n                })\n            }\n\n        //create values for line series 1\n        if(this.props.drinkList.length > 0){\n            let drink1 = this.props.drinkList[0]\n            let  t = 0\n                for (let i=drink1.timeValue; i<24;i++){\n                    let obj = chart.data[i]\n                    let mgs = drink1.mgValue * drink1.quantValue\n                    obj[drink1.name] =  mgs * (0.5 ** (t/6))\n                    t++ }\n        }\n\n        if(this.props.drinkList.length > 1){\n            let drink2 = this.props.drinkList[1]\n            let  t = 0\n                for (let i=drink2.timeValue; i<32;i++){\n                    let obj = chart.data[i]\n                    let mgs = drink2.mgValue * drink2.quantValue\n                    obj[drink2.name] =  mgs * (0.5 ** (t/6))\n                    t++ }\n        }\n\n        if(this.props.drinkList.length > 2){\n            let drink3 = this.props.drinkList[2]\n            let  t = 0\n                for (let i=drink3.timeValue; i<32;i++){\n                    let obj = chart.data[i]\n                    let mgs = drink3.mgValue * drink3.quantValue\n                    obj[drink3.name] =  mgs * (0.5 ** (t/6))\n                    t++ }\n        }\n\n        chart.dateFormatter.inputDateFormat = \"hh:mm\";\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        dateAxis.renderer.minGridDistance = 6;\n        dateAxis.startLocation = 0.5;\n        dateAxis.endLocation = 0.5;\n        dateAxis.baseInterval = {\n        timeUnit: \"hour\",\n        count: 1\n        }   \n\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.tooltip.disabled = true;\n\n        if(this.props.drinkList.length > 0){\n        let series = chart.series.push(new am4charts.LineSeries());\n        series.dataFields.valueX = \"hour\";\n        series.name = this.props.drinkList[0].name;\n        series.dataFields.valueY = this.props.drinkList[0].name;\n        series.tooltipHTML = \"<img src='https://www.amcharts.com/lib/3/images/car.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'><span style='font-size:14px; color:#000000;'><b>{valueY.value}</b></span>\";\n        series.tooltipText = \"[#000]{valueY.value}[/]\";\n        series.tooltip.background.fill = am4core.color(\"#FFF\");\n        series.tooltip.getStrokeFromObject = true;\n        series.tooltip.background.strokeWidth = 3;\n        series.tooltip.getFillFromObject = false;\n        series.fillOpacity = 0.6;\n        series.strokeWidth = 2;\n        series.stacked = true;\n        }\n\n        if(this.props.drinkList.length > 1){\n        let series2 = chart.series.push(new am4charts.LineSeries());\n        series2.name = this.props.drinkList[1].name;\n        series2.dataFields.valueX = \"hour\";\n        series2.dataFields.valueY = this.props.drinkList[1].name;\n        series2.tooltipHTML = \"<img src='https://www.amcharts.com/lib/3/images/motorcycle.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'><span style='font-size:14px; color:#000000;'><b>{valueY.value}</b></span>\";\n        series2.tooltipText = \"[#000]{valueY.value}[/]\";\n        series2.tooltip.background.fill = am4core.color(\"#FFF\");\n        series2.tooltip.getFillFromObject = false;\n        series2.tooltip.getStrokeFromObject = true;\n        series2.tooltip.background.strokeWidth = 3;\n        series2.sequencedInterpolation = true;\n        series2.fillOpacity = 0.6;\n        series2.stacked = true;\n        series2.strokeWidth = 2;}\n\n        if(this.props.drinkList.length > 2){\n        let series3 = chart.series.push(new am4charts.LineSeries());\n        series3.name = this.props.drinkList[2].name;\n        series3.dataFields.valueX = \"hour\";\n        series3.dataFields.valueY = this.props.drinkList[2].name;\n        series3.tooltipHTML = \"<img src='https://www.amcharts.com/lib/3/images/bicycle.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'><span style='font-size:14px; color:#000000;'><b>{valueY.value}</b></span>\";\n        series3.tooltipText = \"[#000]{valueY.value}[/]\";\n        series3.tooltip.background.fill = am4core.color(\"#FFF\");\n        series3.tooltip.getFillFromObject = false;\n        series3.tooltip.getStrokeFromObject = true;\n        series3.tooltip.background.strokeWidth = 3;\n        series3.sequencedInterpolation = true;\n        series3.fillOpacity = 0.6;\n        series3.defaultState.transitionDuration = 1000;\n        series3.stacked = true;\n        series3.strokeWidth = 2;}\n\n\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.xAxis = dateAxis;\n        chart.scrollbarX = new am4core.Scrollbar();\n\n        // Add a legend\n        chart.legend = new am4charts.Legend();\n        chart.legend.position = \"top\";\n\n        // axis ranges\n        let range = dateAxis.axisRanges.create();\n        range.date = new Date(2001, 1, 1);\n        range.endDate = new Date(2001, 1, 2);\n        range.axisFill.fill = chart.colors.getIndex(7);\n        range.axisFill.fillOpacity = 0.2;\n\n   /*     range.label.text = \"Fines for speeding increased\";\n        range.label.inside = true;\n        range.label.rotation = 90;\n        range.label.horizontalCenter = \"right\";\n        range.label.verticalCenter = \"bottom\";\n\n        let range2 = dateAxis.axisRanges.create();\n        range2.date = chart.data[4].hour;\n        range2.grid.stroke = chart.colors.getIndex(7);\n        range2.grid.strokeOpacity = 0.6;\n        range2.grid.strokeDasharray = \"5,2\";*/\n\n/*\n        range2.label.text = \"Motorcycle fee introduced\";\n        range2.label.inside = true;\n        range2.label.rotation = 90;\n        range2.label.horizontalCenter = \"right\";\n        range2.label.verticalCenter = \"bottom\";\n        */\n    }\n\n    componentWillUnmount() {\n        if (this.chart) {\n          this.chart.dispose();\n        }\n      }\n\n\n\n\n    render(){\n      return(\n        <div className=\"rn-progress-area pb--120 bg_color--1\">\n            <div className=\"container\">\n                <div id=\"chartdiv\" style={{ width: \"100%\", height: \"600px\" }}></div>\n            </div>\n        </div>\n      )}\n}\n      export default Chart"]},"metadata":{},"sourceType":"module"}