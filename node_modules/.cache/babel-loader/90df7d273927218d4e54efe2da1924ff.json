{"ast":null,"code":"var _jsxFileName = \"/Users/taylorepskamp/Desktop/halfcaff/src/component/Chart/chart.js\";\nimport React from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Chart extends React.Component {\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.data = this.props.data;\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"hour\";\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    let drinkId = ['drink1', 'drink2', 'drink3', 'drink4', 'drink5', 'drink6', 'drink7', 'drink8', 'drink9', 'drink10', 'drink11', 'drink12'];\n\n    for (let i = 0; i < this.props.drinkList.length; i++) {\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.categoryX = \"hour\";\n      series.name = this.props.drinkList[i].name;\n      series.dataFields.valueY = drinkId[i];\n      series.tooltipHTML = \"<span style='font-size:14px; color:#000000;'><b>{valueY.value} mg</b></span>\";\n      series.tooltipText = \"[#000]{valueY.value}[/]\";\n      series.tooltip.background.fill = am4core.color(\"#FFF\");\n      series.tooltip.getStrokeFromObject = true;\n      series.tooltip.background.strokeWidth = 3;\n      series.tooltip.getFillFromObject = false;\n      series.fillOpacity = 0.6;\n      series.strokeWidth = 2;\n      series.stacked = true;\n    }\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.xAxis = categoryAxis;\n    chart.scrollbarX = new am4core.Scrollbar(); // Add a legend\n\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"top\"; // axis ranges\n\n    let range = categoryAxis.axisRanges.create();\n    range.category = chart.data[this.props.bedtime].hour;\n    range.endCategory = chart.data[this.props.awaketime].hour;\n    range.axisFill.fill = chart.colors.getIndex(11);\n    range.axisFill.fillOpacity = 0.2;\n    range.label.text = \"Sleep Time\";\n    range.label.inside = true;\n    range.label.rotation = 90;\n    range.label.horizontalCenter = \"right\";\n    range.label.verticalCenter = \"bottom\";\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rn-progress-area bg_color--1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center row--15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"600px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/taylorepskamp/Desktop/halfcaff/src/component/Chart/chart.js"],"names":["React","am4core","am4charts","am4themes_animated","useTheme","Chart","Component","componentDidMount","chart","create","XYChart","data","props","categoryAxis","xAxes","push","CategoryAxis","dataFields","category","valueAxis","yAxes","ValueAxis","tooltip","disabled","drinkId","i","drinkList","length","series","LineSeries","categoryX","name","valueY","tooltipHTML","tooltipText","background","fill","color","getStrokeFromObject","strokeWidth","getFillFromObject","fillOpacity","stacked","cursor","XYCursor","xAxis","scrollbarX","Scrollbar","legend","Legend","position","range","axisRanges","bedtime","hour","endCategory","awaketime","axisFill","colors","getIndex","label","text","inside","rotation","horizontalCenter","verticalCenter","componentWillUnmount","dispose","render","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Chart extends React.Component{\n    \n    \n\n    componentDidMount(){\n        let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n        chart.data = this.props.data;\n        \n        let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"hour\"\n\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.tooltip.disabled = true;\n\n        let drinkId = ['drink1','drink2','drink3','drink4','drink5','drink6','drink7','drink8','drink9','drink10','drink11','drink12']\n\n        for(let i = 0; i < this.props.drinkList.length; i++){\n            let series = chart.series.push(new am4charts.LineSeries());\n            series.dataFields.categoryX = \"hour\";\n            series.name = this.props.drinkList[i].name;\n            series.dataFields.valueY = drinkId[i];\n            series.tooltipHTML = \"<span style='font-size:14px; color:#000000;'><b>{valueY.value} mg</b></span>\";\n            series.tooltipText = \"[#000]{valueY.value}[/]\";\n            series.tooltip.background.fill = am4core.color(\"#FFF\");\n            series.tooltip.getStrokeFromObject = true;\n            series.tooltip.background.strokeWidth = 3;\n            series.tooltip.getFillFromObject = false;\n            series.fillOpacity = 0.6;\n            series.strokeWidth = 2;\n            series.stacked = true;\n        }\n\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.xAxis = categoryAxis;\n        chart.scrollbarX = new am4core.Scrollbar();\n\n        // Add a legend\n        chart.legend = new am4charts.Legend();\n        chart.legend.position = \"top\";\n\n        // axis ranges\n        let range = categoryAxis.axisRanges.create();\n        range.category = chart.data[this.props.bedtime].hour\n        range.endCategory = chart.data[this.props.awaketime].hour\n        range.axisFill.fill = chart.colors.getIndex(11);\n        range.axisFill.fillOpacity = 0.2;\n\n        range.label.text = \"Sleep Time\";\n        range.label.inside = true;\n        range.label.rotation = 90;\n        range.label.horizontalCenter = \"right\";\n        range.label.verticalCenter = \"bottom\";\n        \n    }\n\n    componentWillUnmount() {\n        if (this.chart) {\n          this.chart.dispose();\n        }\n      }\n\n    render(){\n\n      return(\n        <div className=\"rn-progress-area bg_color--1\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center row--15\">\n                    <div id=\"chartdiv\" style={{ width: \"100%\", height: \"600px\" }}>\n                    </div>\n                </div>\n            </div>\n        </div>\n      )}\n}\n      export default Chart"]},"metadata":{},"sourceType":"module"}